{"ast":null,"code":"var _jsxFileName = \"/Users/akor1/Documents/programing/code/ReactStydy/front-test/src/Todo.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  // const onChange = (event) => {\n  //   console.log(event.target.value);\n  //   setTodo(event.target.value);\n  // };\n  //\n  // const onSubmit = (event) => {\n  //   event.preventDefault(); // 새로고침 막아줌\n  //   console.log(\"onSubmit Click\");\n  //\n  //   setTodos((currentTodos) => [todo, ...currentTodos]);\n  //   setTodo(\"\");  // 초기화 시킨다.\n  //\n  //   console.log(todos);\n  // };\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(data => {\n      setTodos(data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos.map((item, index) => {\n      // return <TodoItem index={index} item={item}></TodoItem>\n      // return <li key={index}>{item}</li>;\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        name: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this);\n}\n_s(Todo, \"zmv2+9BYwuR3iDuR7YumPfNqDHk=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","TodoItem","Todo","todo","setTodo","todos","setTodos","fetch","then","res","json","data","map","item","index","name","id"],"sources":["/Users/akor1/Documents/programing/code/ReactStydy/front-test/src/Todo.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nfunction Todo() {\n\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  // const onChange = (event) => {\n  //   console.log(event.target.value);\n  //   setTodo(event.target.value);\n  // };\n  //\n  // const onSubmit = (event) => {\n  //   event.preventDefault(); // 새로고침 막아줌\n  //   console.log(\"onSubmit Click\");\n  //\n  //   setTodos((currentTodos) => [todo, ...currentTodos]);\n  //   setTodo(\"\");  // 초기화 시킨다.\n  //\n  //   console.log(todos);\n  // };\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => {\n        setTodos(data);\n      });\n  });\n\n  return (<div>\n    {/*<form onSubmit={onSubmit} action=\"\">*/}\n    {/*  <input value={todo} onChange={onChange} type=\"text\" placeholder=\"할 일을 추가하세요.\"/>*/}\n    {/*  <button>Add todo</button>*/}\n    {/*</form>*/}\n    {todos.map((item, index) => {\n      // return <TodoItem index={index} item={item}></TodoItem>\n      // return <li key={index}>{item}</li>;\n      return <TodoItem key={item.id} name={item.name} ></TodoItem>\n    })}\n\n  </div>);\n}\n\nexport default Todo;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,IAAI,GAAG;EAAA;EAEd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBAAQ;IAAA,UAKLN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B;MACA;MACA,oBAAO,QAAC,QAAQ;QAAe,IAAI,EAAED,IAAI,CAACE;MAAK,GAAzBF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAA+B;IAC9D,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEE;AACR;AAAC,GAxCQd,IAAI;AAAA,KAAJA,IAAI;AA0Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}